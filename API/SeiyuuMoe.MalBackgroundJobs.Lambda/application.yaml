AWSTemplateFormatVersion: '2010-09-09'
Description: Application stack for MAL Bg Jobs
Transform: AWS::Serverless-2016-10-31

Parameters:
  EnvironmentType:
    Type: String
    AllowedValues:
      - dev
      - prod

Conditions:
  IsProdEnvironment: !Equals [ !Ref EnvironmentType, prod ]

Resources:
  ScheduleLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - !Ref ParameterStoreAccessPolicy
      Policies:
        - PolicyName: AllowToPopulateSqs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                Resource: !GetAtt AnimeToUpdateQueue.Arn
  
  UpdateLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - !Ref ParameterStoreAccessPolicy
      Policies:
        - PolicyName: AllowToReadFromSqs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                  - sqs:ChangeMessageVisibility
                  - sqs:GetQueueAttributes
                Resource: !GetAtt AnimeToUpdateQueue.Arn

  ParameterStoreAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: Allows access to Parameter Store
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ssm:GetParametersByPath
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*'

  ScheduleAnimesUpdateSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(1/15 * 8 * ? *)
      State: !If
        - IsProdEnvironment
        - ENABLED
        - DISABLED
      Targets:
        - Arn: !GetAtt ScheduleAnimesUpdate.Arn
          Id: LambdaTarget
  
  ScheduleAnimesUpdate:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: dotnetcore3.1
      Description: Lambda for pushing animes on queue for updating
      FunctionName: ScheduleAnimesUpdate
      Handler: SeiyuuMoe.MalBackgroundJobs.Lambda::SeiyuuMoe.MalBackgroundJobs.Lambda.Function.ScheduleAnimesLambda::InvokeAsync
      MemorySize: 512
      Timeout: 180
      Role: !GetAtt ScheduleLambdaRole.Arn

  AnimeToUpdateQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: AnimeToUpdateQueue
      DelaySeconds: 0
      ReceiveMessageWaitTimeSeconds: 20
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt AnimeToUpdateDLQ.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 30

  AnimeToUpdateDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: AnimeToUpdateDLQ
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 0

  UpdateAnime:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: dotnetcore3.1
      Description: Lambda for updating single anime
      FunctionName: UpdateAnime
      Handler: SeiyuuMoe.MalBackgroundJobs.Lambda::SeiyuuMoe.MalBackgroundJobs.Lambda.Function.UpdateAnimeLambda::InvokeAsync
      MemorySize: 256
      Timeout: 15
      ReservedConcurrentExecutions: 1
      Role: !GetAtt UpdateLambdaRole.Arn
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            BatchSize: 1
            Queue: !GetAtt AnimeToUpdateQueue.Arn

  UpdateSeasonsSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 0 1 * ? *)
      State: !If
        - IsProdEnvironment
        - ENABLED
        - DISABLED
      Targets:
        - Arn: !GetAtt UpdateSeasons.Arn
          Id: LambdaTarget

  UpdateSeasons:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: dotnetcore3.1
      Description: Lambda for updating seasons table
      FunctionName: UpdateSeasons
      Handler: SeiyuuMoe.MalBackgroundJobs.Lambda::SeiyuuMoe.MalBackgroundJobs.Lambda.Function.UpdateSeasonsLambda::InvokeAsync
      MemorySize: 512
      Timeout: 180
      Role: !GetAtt ScheduleLambdaRole.Arn

Globals:
  Function:
    Runtime: dotnetcore3.1
    MemorySize: 512
    Timeout: 150
    CodeUri: /bin/Release/netcore3.1/publish
    Description: !Ref AWS::StackName
    Tracing: Active
    Environment:
      Variables:
        EnvironmentType: !Ref EnvironmentType
        AnimeToUpdateQueueUrl: !Ref AnimeToUpdateQueue
        StackName: !Ref AWS::StackName
    Tags:
      environment: !Ref EnvironmentType
      service-name: mal-bg-jobs